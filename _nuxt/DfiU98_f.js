import{b as d,g as m,aT as p,A as v}from"./DBBIm6QW.js";import{f}from"./DkRa0OvZ.js";import{e as h,c as y,o as c,a as l,q as x,P as S,b as V,p as e,K as b}from"#entry";import"./B-dksMZM.js";import"./BYayo6hL.js";const C={class:"flex h-full w-full flex-col gap-12 px-1.5 pt-8"},k={class:"flex flex-col gap-4"},g={class:"flex flex-col gap-2"},w={class:"flex h-8 items-center justify-between"},A=h({__name:"CollectionAuthentication",setup(B){const{activeCollection:t,activeEnvVariables:s,activeEnvironment:i,activeServer:n,activeWorkspace:o}=d(),{collectionMutators:r}=m(),u=()=>{t.value?.uid&&r.edit(t.value.uid,"useCollectionSecurity",!t.value.useCollectionSecurity)};return(N,a)=>(c(),y("div",C,[l("div",k,[l("div",g,[l("div",w,[a[0]||(a[0]=l("h3",{class:"font-bold"},"Authentication",-1)),V(e(p),{class:"w-4",modelValue:e(t)?.useCollectionSecurity??!1,"onUpdate:modelValue":u},null,8,["modelValue"])]),a[1]||(a[1]=l("p",{class:"pr-6 text-sm"}," Added authentication will apply to all requests under this collection. You can override this by specifying another one in the request. ",-1))]),e(t)&&e(o)?(c(),x(e(f),{key:0,class:b(["scalar-collection-auth",!e(t)?.useCollectionSecurity&&"pointer-events-none opacity-50 mix-blend-luminosity"]),collection:e(t),envVariables:e(s),environment:e(i),layout:"client",selectedSecuritySchemeUids:e(t)?.selectedSecuritySchemeUids??[],server:e(n),title:"Authentication",workspace:e(o)},null,8,["class","collection","envVariables","environment","selectedSecuritySchemeUids","server","workspace"])):S("",!0)])]))}}),z=v(A,[["__scopeId","data-v-cc87292e"]]);export{z as default};
